# 05. 재귀 알고리즘
## 05-1. 재귀의 기본
### 재귀란?
어떤 사건이 자기 자신을 포함하고 다시 자기 자신을 사용하여 정의될 때, 재귀적(recursive)이라고 한다.  
재귀의 개념을 사용하여 자연수를 정의해 보면,  
~~~
1. 1은 자연수입니다.
2. 자연수 n의 바로 다음 수도 자연수입니다.
~~~
다음과 같이 무한으로 존재하는 자연수를 두 문장으로 정의할 수 있게 된다.  
재귀를 효과적으로 사용하면 이런 정의뿐만 아니라 프로그램도 간결하게 할 수 있다.  
### 순차곱셈 구하기
재귀를 이용하여 순차곱셈을 구해보자. 참고로 순차곱셈은 `! (factorial)`이다.  
양의 정수 n의 순차곱셈 `(n!)`은 다음과 같이 재귀적으로 정의된다.  
~~~
1. 0! = 1
2. n > 0 이면 n! = n * (n-1)!
~~~
위의 정의를 그대로 프로그램으로 구현할 때는 factorial 함수를 이용한다.  
`p166 실습 5-1 참고`  
  
#### 재귀 호출
#### 직접 재귀와 간접 재귀

### 유클리드 호제법
재귀를 이용하여 두 정수의 최대공약수를 구하는 방법을 알아보자.  
두 정수를 직사각형의 두 변의 길이라고 생각하면 두 정수의 최대공약수를 구하는 문제는 아래 문제처럼 바꿀 수 있다.
~~~
직사각형을 정사각형으로 완전히 채웁니다.
이렇게 만들 수 있는 정사각형의 가장 긴 변의 길이를 구하세요.
~~~
수학적으로 표현하면 다음과 같다.  
~~~
두 정수 x, y의 최대공약수를 gcd(x,y)라 하자.
최대공약수는 y가 0이면 x이고, y가 0이 아니면 gcd(y,x%y)이다.
~~~
이 알고리즘을 **유클리드 호제법**이라고 한다.  
`p170 실습 5-2 참고`

